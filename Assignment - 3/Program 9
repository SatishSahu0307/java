import java.util.*;
public class PrimeNumbersInRange {

    public static void main(String[] args) {
        System.out.println("Prime numbers between 2 and 20 are:");

        // Loop through numbers from 2 to 20 (inclusive)
        for (int i = 2; i <= 20; i++) {
            // Check if the current number 'i' is prime using the isPrime method
            if (isPrime(i)) {
                System.out.print(i + " "); // If it's prime, print it
            }
        }
        System.out.println(); // Print a new line at the end for better formatting
    }

    /**
     * Checks if a given integer is a prime number.
     * A prime number is a natural number greater than 1 that has no positive divisors
     * other than 1 and itself.
     *
     * @param number The integer to check for primality.
     * @return true if the number is prime, false otherwise.
     */
    public static boolean isPrime(int number) {
        // Numbers less than or equal to 1 are not prime
        if (number <= 1) {
            return false;
        }
        // 2 is the only even prime number
        if (number == 2) {
            return true;
        }
        // If the number is even and greater than 2, it's not prime
        if (number % 2 == 0) {
            return false;
        }
        // Check for divisibility by odd numbers from 3 up to the square root of the number.
        // We only need to check up to the square root because if a number 'n' has a divisor
        // greater than its square root, it must also have a divisor smaller than its square root.
        // We increment by 2 to only check odd divisors, as even divisors were already handled.
        for (int i = 3; i * i <= number; i += 2) {
            if (number % i == 0) {
                return false; // If divisible by any 'i', it's not prime
            }
        }
        return true; // If no divisors are found, the number is prime
    }
}
